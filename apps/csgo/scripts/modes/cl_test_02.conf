#! /bin/bash

# TEST 02:
# Map cycle
# tv_autorecord 1
# tv_cameraman

HOSTNAME="CampusLAN16 Server Test 02: Map cycle, demo recording"



MAXPLAYERS=10

MAPS="de_inferno de_cbble de_overpass de_train"



TV_AUTORECORD=1
TV_MAXCLIENTS=4

TV_CAMERAMAN="76561198050960267"

TV_PORT=27100




#################### MATCH CONFIG ##################

MATCH_CFG="$INSTANCE_DIR/csgo/cfg/warmod/$MODE.cfg"

cat <<-EOF > "$MATCH_CFG"
	// CampusLAN 2016 Config

	exec warmod/ruleset_global.cfg

	mp_overtime_enable 0

	bot_join_team any
	bot_quota $MAXPLAYERS
	bot_quota_mode fill

	wm_auto_record 0
	wm_stats_enabled 0
	wm_active 1
	wm_competition "CL16"
	wm_event "groups"
	wm_warmup_respawn 1
	wm_auto_knife 1
	wm_autodemoupload_enable 0
	wm_pause_confirm 0
	wm_unpause_confirm 1
	wm_auto_unpause 0
	wm_pause_limit 6
	wm_veto 0

	wm_min_ready "$MAXPLAYERS"
	wm_max_players "$MAXPLAYERS"

	mp_maxrounds 6
EOF

SERVERCFG_ADDITIONAL=(
	"wm_match_config \"warmod/$MODE.cfg\""
	"wm_auto_knife 1"
)




########################### TEAM SETUP ############################

# Requires variables TEAM_T and TEAM_CT (equals ID on campuslan website)

HOMEPAGE="https://campuslan.csn.tu-chemnitz.de/lan/team"

# argument 1: side (ct|t)
# argument 2: teamid
parse_team () {
	local side=$1
	local teamid=$2

	[[ $teamid ]] || return
	local name="$(cl_teamname $teamid)"
	[[ $name ]] || return
	SERVERCFG_ADDITIONAL+=( "$side \"$name\"" )
	cat <<< "$side \"$name\"" >> "$MATCH_CFG"

	local id
	for id in $(cl_team_steamids $teamid); do
		if [[ $id && ! $id =~ [^[:digit:]] ]]; then
			SERVERCFG_ADDITIONAL+=( "wm_forceteam \"$id\" $side" )
			cat <<< "wm_forceteam \"$id\" $side" >> "$MATCH_CFG"
		fi
	done
}

parse_team t  $TEAM_T
parse_team ct $TEAM_CT




######################## ENABLE/DISABLE SOURCEMOD PLUGINS ###########################
# Requires variable SOURCEMOD_PLUGINS to be set
SOURCEMOD_PLUGINS="
	admin-flatfile adminhelp adminmenu basebans basecommands
	clientprefs nextmap reservedslots warmod
"

(
	# Step 1: disable all addons
	cd "$INSTANCE_DIR/csgo/addons/sourcemod/plugins"
	for f in *.smx; do
		mv $f disabled/$f
	done

	# Step 2: re-enable those that we use
	for f in $SOURCEMOD_PLUGINS; do
		mv disabled/$f.smx $f.smx 2>/dev/null
	done
)